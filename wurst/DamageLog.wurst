/*
	This example of .save/releaseInstance feature package usage stores up to
	STORED_INSTANCES last damage events and prints them up when host presses `ESC` button.
*/
package DamageLog
import DamageModify

// config //

constant STORED_INSTANCES = 16

// end of config //

Damage array storedDamage
int storedIndex

init
	addDamageListener() d ->
		if storedDamage[storedIndex] != null
			storedDamage[storedIndex].releaseInstance()
		storedDamage[storedIndex] = d..saveInstance()
		storedIndex += 1
		if storedIndex > STORED_INSTANCES - 1
			storedIndex = 0
			
	// Press `ESC` to see saved instances
	CreateTrigger()..registerPlayerEvent(players[0], EVENT_PLAYER_END_CINEMATIC).addAction() ->
		var x = storedIndex
		for i = 0 to STORED_INSTANCES - 1
			let d = storedDamage[x]
			if d != null
				var s = "Damage #"+(d castTo int).toString()
				s += " of id "+d.data.toString()
				s += " was dealt by "+d.source.getName()
				s += " to "+d.target.getName()
				s += " in amount of "+d.getActual().toString()
				s += " (intended: "+d.amount.toString()
				s += ", initial: " + d.initial.toString()
				s += ", spell: " + d.isSpell().toString()
				s += ", killing blow: "+d.isKillingBlow().toString()
				s += ")"
				Log.info(s)
			x += 1
			if x > STORED_INSTANCES - 1
				x = 0